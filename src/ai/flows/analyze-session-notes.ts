// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Analyzes session notes to identify key topics for filtering.
 *
 * - analyzeSessionNotes - Analyzes the session notes and returns the key topics.
 * - AnalyzeSessionNotesInput - The input type for the analyzeSessionNotes function.
 * - AnalyzeSessionNotesOutput - The return type for the analyzeSessionNotes function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const AnalyzeSessionNotesInputSchema = z.object({
  sessionNotes: z.string().describe('The notes from the training session.'),
});
export type AnalyzeSessionNotesInput = z.infer<typeof AnalyzeSessionNotesInputSchema>;

const AnalyzeSessionNotesOutputSchema = z.object({
  keyTopics: z
    .array(z.string())
    .describe('The key topics identified in the session notes.'),
});
export type AnalyzeSessionNotesOutput = z.infer<typeof AnalyzeSessionNotesOutputSchema>;

export async function analyzeSessionNotes(
  input: AnalyzeSessionNotesInput
): Promise<AnalyzeSessionNotesOutput> {
  return analyzeSessionNotesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeSessionNotesPrompt',
  input: {
    schema: z.object({
      sessionNotes: z.string().describe('The notes from the training session.'),
    }),
  },
  output: {
    schema: z.object({
      keyTopics: z
        .array(z.string())
        .describe('The key topics identified in the session notes.'),
    }),
  },
  prompt: `You are an AI assistant that analyzes horse training session notes and identifies the key topics discussed in the notes.

  Please extract the Key Topics from the following Training Session Notes:
  {{sessionNotes}}
  \n  Return these topics as a JSON array of strings. For example: ["Topic 1", "Topic 2", "Topic 3"]`,
});

const analyzeSessionNotesFlow = ai.defineFlow<
  typeof AnalyzeSessionNotesInputSchema,
  typeof AnalyzeSessionNotesOutputSchema
>({
  name: 'analyzeSessionNotesFlow',
  inputSchema: AnalyzeSessionNotesInputSchema,
  outputSchema: AnalyzeSessionNotesOutputSchema,
},
async input => {
  const {output} = await prompt(input);
  return output!;
});